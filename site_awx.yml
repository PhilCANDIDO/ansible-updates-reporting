---
# AWX-Compatible Site Playbook for Updates Reporting

- name: "AWX Updates Reporting Pipeline - Setup"
  hosts: localhost
  gather_facts: true
  become: false
  vars_files:
    - vars/ansible-updates-reporting.yml
    - vars/awx_mode.yml
  tasks:
    - name: "(awx_setup) Display execution mode"
      debug:
        msg: |
          Execution Mode: {{ 'AWX/Tower' if is_awx_environment else 'Standard Ansible' }}
          Job ID: {{ awx_job_id }}
          Artifacts Directory: {{ awx_artifacts_dir if is_awx_environment else 'N/A' }}
          Report Storage: {{ reports_storage_path }}
      run_once: true
      tags: [always, info]

    - name: "(awx_setup) Initialize execution variables"
      set_fact:
        execution_timestamp: "{{ ansible_date_time.epoch }}"
        execution_id: "{{ awx_job_id if is_awx_environment else ansible_date_time.iso8601_basic_short }}"
        use_repository_manager: "{{ false if is_awx_environment else use_repository_manager }}"
      tags: [always, variables]

    - name: "(awx_setup) Create artifact directories"
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ reports_storage_path }}"
        - "{{ host_reports_path }}"
        - "{{ consolidated_reports_path }}"
        - "{{ temp_storage_path }}"
      when: is_awx_environment
      tags: [setup, directories]

- name: "Collect Updates Information - AWX Mode"
  hosts: all:!repository_managers
  gather_facts: true
  serial: "{{ updates_collection_serial | default('100%') }}"
  vars_files:
    - vars/ansible-updates-reporting.yml
    - vars/awx_mode.yml
  vars:
    execution_id: "{{ hostvars['localhost']['execution_id'] }}"
    execution_timestamp: "{{ hostvars['localhost']['execution_timestamp'] }}"
  tasks:
    - name: "(updates_collection) Execute updates collector role"
      include_role:
        name: updates_collector
      tags: [collection, updates]

    - name: "(updates_collection) Collect data for AWX"
      include_role:
        name: awx_data_collector
      when: is_awx_environment
      tags: [collection, awx, data]

    - name: "(updates_collection) Store host data traditionally"
      block:
        - name: Ensure local directory exists
          file:
            path: "{{ local_reports_path }}"
            state: directory
            mode: '0755'
          delegate_to: localhost
          run_once: true

        - name: Generate host report locally
          template:
            src: roles/updates_collector/templates/host_report.json.j2
            dest: "{{ local_reports_path }}/{{ inventory_hostname }}.json"
            mode: '0644'
          delegate_to: localhost
      when: not is_awx_environment
      tags: [collection, local]

- name: "Generate Consolidated Reports - AWX Mode"
  hosts: "{{ 'localhost' if is_awx_environment else (groups['repository_managers'][0] if groups['repository_managers'] is defined else 'localhost') }}"
  gather_facts: true
  become: false
  vars_files:
    - vars/ansible-updates-reporting.yml
    - vars/awx_mode.yml
  vars:
    execution_id: "{{ hostvars['localhost']['execution_id'] }}"
    execution_timestamp: "{{ hostvars['localhost']['execution_timestamp'] }}"
  tasks:
    - name: "(report_generation) Include AWX report generation"
      include: roles/report_generator/tasks/awx_generate_reports.yml
      when: is_awx_environment
      tags: [reporting, awx]

    - name: "(report_generation) Execute traditional report generator"
      include_role:
        name: report_generator
      when: not is_awx_environment
      tags: [reporting, traditional]

- name: "Send Notifications - AWX Mode"
  hosts: localhost
  gather_facts: false
  become: false
  vars_files:
    - vars/ansible-updates-reporting.yml
    - vars/awx_mode.yml
  vars:
    execution_id: "{{ hostvars['localhost']['execution_id'] }}"
  tasks:
    - name: "(notification) Include AWX notification tasks"
      include: roles/notification_manager/tasks/awx_notify.yml
      when:
        - is_awx_environment
        - send_notifications | default(true) | bool
      tags: [notification, awx]

    - name: "(notification) Execute traditional notification manager"
      include_role:
        name: notification_manager
      when:
        - not is_awx_environment
        - send_notifications | default(true) | bool
        - smtp_server is defined
      tags: [notification, traditional]

- name: "AWX Final Summary"
  hosts: localhost
  gather_facts: false
  become: false
  vars_files:
    - vars/awx_mode.yml
  vars:
    execution_id: "{{ hostvars['localhost']['execution_id'] }}"
    execution_timestamp: "{{ hostvars['localhost']['execution_timestamp'] }}"
  tasks:
    - name: "(awx_summary) Get current timestamp"
      command: date -Iseconds
      register: current_timestamp
      changed_when: false
      tags: [summary, timestamp]

    - name: "(awx_summary) Display execution summary"
      debug:
        msg: |
          AWX Updates Reporting Execution Complete
          =========================================
          Job ID: {{ awx_job_id }}
          Execution Time: {{ current_timestamp.stdout }}
          Mode: {{ 'AWX/Tower' if is_awx_environment else 'Standard Ansible' }}
          
          Reports generated in: {{ reports_storage_path }}
          
          {% if is_awx_environment %}
          Artifacts are available in the AWX UI under this job's artifacts tab.
          {% endif %}
      when: is_awx_environment
      tags: [summary, awx]

    - name: "(awx_summary) Set final job statistics"
      set_stats:
        data:
          job_completion:
            status: "success"
            execution_id: "{{ awx_job_id }}"
            timestamp: "{{ current_timestamp.stdout }}"
            reports_path: "{{ reports_storage_path }}"
        per_host: false
      when: is_awx_environment
      tags: [summary, stats]