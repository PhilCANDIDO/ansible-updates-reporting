---
- name: "(update_indexes) Include OS detection for variables"
  include_tasks: detect_os.yml
  tags: [repository, update, detection]

- name: "(update_indexes) Find all timestamped directories for API generation"
  find:
    paths: "{{ repository_base_path }}/{{ item }}"
    file_type: directory
    patterns: "[0-9]*"
    excludes: 
      - "archive"
      - "latest"
  register: timestamped_directories_update
  loop: "{{ report_formats }}"
  tags: [repository, update, discovery]

- name: "(update_indexes) Generate API catalog for each format"
  template:
    src: api_catalog.json.j2
    dest: "{{ repository_base_path }}/{{ item }}/api.json"
    owner: "{{ current_webserver_user | default('www-data') }}"
    group: "{{ current_webserver_group | default('www-data') }}"
    mode: '0644'
  loop: "{{ report_formats }}"
  vars:
    format_type: "{{ item }}"
    format_directories: "{{ timestamped_directories_update.results | selectattr('item', 'equalto', item) | map(attribute='files') | flatten | map(attribute='path') | map('basename') | sort(reverse=true) | list }}"
  become: true
  tags: [repository, update, api]

- name: "(update_indexes) Generate main API index"
  template:
    src: main_api_index.json.j2
    dest: "{{ repository_base_path }}/api.json"
    owner: "{{ current_webserver_user | default('www-data') }}"
    group: "{{ current_webserver_group | default('www-data') }}"
    mode: '0644'
  become: true
  vars:
    all_directories: "{{ timestamped_directories_update.results | map(attribute='files') | flatten | map(attribute='path') | map('basename') | unique | sort(reverse=true) | list }}"
  tags: [repository, update, main_api]

- name: "(update_indexes) Check if format index files exist"
  stat:
    path: "{{ repository_base_path }}/{{ item }}/index.html"
  register: format_index_check_update
  loop: "{{ report_formats }}"
  tags: [repository, update, check]

- name: "(update_indexes) Create format index files if they don't exist"
  template:
    src: format_index.html.j2
    dest: "{{ repository_base_path }}/{{ item.item }}/index.html"
    owner: "{{ current_webserver_user | default('www-data') }}"
    group: "{{ current_webserver_group | default('www-data') }}"
    mode: '0644'
  loop: "{{ format_index_check_update.results }}"
  when: not item.stat.exists
  become: true
  vars:
    format_type: "{{ item.item }}"
  tags: [repository, update, create_index]

- name: "(update_indexes) Update main repository index"
  template:
    src: main_index.html.j2
    dest: "{{ repository_base_path }}/index.html"
    owner: "{{ current_webserver_user | default('www-data') }}"
    group: "{{ current_webserver_group | default('www-data') }}"
    mode: '0644'
  become: true
  tags: [repository, update, main_index]

- name: "(update_indexes) Display index update summary"
  debug:
    msg: |
      Repository Index Update Summary:
      - API catalogs updated for formats: {{ report_formats | join(', ') }}
      - Main API index updated: {{ repository_base_path }}/api.json
      - Format indexes checked/created: {{ format_index_check_update.results | length }}
      - Main repository index updated: {{ repository_base_path }}/index.html
      - Total timestamped directories: {{ timestamped_directories_update.results | map(attribute='files') | flatten | length }}
  tags: [repository, update, summary]