---
- name: "Ansible Updates Reporting Pipeline"
  hosts: localhost
  gather_facts: false
  become: true
  vars_files:
    - vars/ansible-updates-reporting.yml
  vars:
    execution_timestamp: "{{ ansible_date_time.epoch }}"
    execution_id: "{{ ansible_date_time.iso8601_basic_short }}"
    # Variable pour contrôler l'utilisation du repository
    use_repository_manager: "{{ groups['repository_managers'] is defined and groups['repository_managers'] | length > 0 }}"
  tasks:
    - name: "(site) Validate repository manager availability"
      ping:
      delegate_to: "{{ groups['repository_managers'][0] }}"
      when: use_repository_manager | bool
      tags: [always, validation]

    - name: "(site) Display repository manager status"
      debug:
        msg: "Repository manager will {{ 'be used' if use_repository_manager else 'NOT be used' }} for this execution"
      tags: [always, info]

- name: "Setup Repository Manager"
  hosts: repository_managers
  gather_facts: true
  vars_files:
    - vars/ansible-updates-reporting.yml
  vars:
    use_repository_manager: "{{ groups['repository_managers'] is defined and groups['repository_managers'] | length > 0 }}"
  tasks:
    - name: "(repository_setup) Execute repository manager role"
      include_role:
        name: repository_manager
      when: use_repository_manager | bool
      tags: [repository, setup]

- name: "Collect Updates Information"
  hosts: all:!repository_managers
  gather_facts: true
  serial: "{{ updates_collection_serial | default('100%') }}"
  vars_files:
    - vars/ansible-updates-reporting.yml
  vars:
    use_repository_manager: "{{ groups['repository_managers'] is defined and groups['repository_managers'] | length > 0 }}"
    # Transmettre l'information aux rôles
    repository_enabled: "{{ use_repository_manager | default(false) }}"
  tasks:
    - name: "(updates_collection) Execute updates collector role"
      include_role:
        name: updates_collector
      tags: [collection, updates]

- name: "Generate Consolidated Reports"
  hosts: "{{ groups['repository_managers'] if (groups['repository_managers'] is defined and groups['repository_managers'] | length > 0) else 'localhost' }}"
  gather_facts: true
  vars_files:
    - vars/ansible-updates-reporting.yml
  vars:
    use_repository_manager: "{{ groups['repository_managers'] is defined and groups['repository_managers'] | length > 0 }}"
    repository_enabled: "{{ use_repository_manager | default(false) }}"
  tasks:
    - name: "(report_generation) Execute report generator role"
      include_role:
        name: report_generator
      tags: [reporting, generation]

- name: "Send Notifications"
  hosts: "{{ groups['repository_managers'] if (groups['repository_managers'] is defined and groups['repository_managers'] | length > 0) else 'localhost' }}"
  gather_facts: false
  vars_files:
    - vars/ansible-updates-reporting.yml
  vars:
    use_repository_manager: "{{ groups['repository_managers'] is defined and groups['repository_managers'] | length > 0 }}"
    repository_enabled: "{{ use_repository_manager | default(false) }}"
  tasks:
    - name: "(notification) Execute notification manager role"
      include_role:
        name: notification_manager
      when: 
        - send_notifications | default(true) | bool
        - smtp_server is defined
      tags: [notification, email]